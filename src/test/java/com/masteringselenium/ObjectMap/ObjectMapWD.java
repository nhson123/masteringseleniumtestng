package com.masteringselenium.ObjectMap;

import com.masteringselenium.DriverFactory;
import gherkin.lexer.Th;
import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import static org.testng.Assert.fail;

/**
 * Package: com.masteringselenium.ObjectMap Generated by: Hoang.Son.Nguyen Generated at: 18.01.2019
 * 2019
 */
public class ObjectMapWD extends DriverFactory {
  private WebDriver driver;
  private StringBuffer verificationErrors = new StringBuffer();
  private ObjectMap map;

  @BeforeTest
  public void setUp() throws Exception {
    driver = DriverFactory.getDriver();
    driver.get("https://www.online-rechner.at/bmi");
  }

  @DataProvider
  public Object[][] testData() {
    return new Object[][] {
      new Object[] {"man", 100, 200, "Übergewicht"},
      new Object[] {"frau", 50, 155, "Normalgewicht"},
    };
  }

  @Test(dataProvider = "testData")
  public void testBMIObjectMap(String geschlecht, int gewicht, int groeße, String bmi) {

    try {
      map =
          new ObjectMap("src\\test\\java\\com\\masteringselenium\\ObjectMap\\objectmap.properties");

      // get hight element
      WebElement height = driver.findElement(map.getLocator("height_field"));
      height.clear();
      height.sendKeys(groeße + "");

      WebElement weight = driver.findElement(map.getLocator("weight_field"));
      weight.clear();
      weight.sendKeys(gewicht + "");

      if (geschlecht.equalsIgnoreCase("man")) {
        WebElement sexman = driver.findElement(map.getLocator("manly_sex"));
        if (!sexman.isSelected()) {
          sexman.click();
        }
      }
        WebDriverWait wait = new WebDriverWait(driver, 10);
        try {
            WebElement calc =
                    wait.until(
                            ExpectedConditions.elementToBeClickable(map.getLocator("calButton")));
            calc.click();
        } catch (TimeoutException ex) {
            Assert.fail("Not loaded");
        }

        try {
            WebElement bmiField =
                    wait.until(ExpectedConditions.presenceOfElementLocated(map.getLocator("bmi_field")));
            Assert.assertTrue(bmiField.getText().contains(bmi));
        } catch (TimeoutException ex) {
            verificationErrors.append(ex.toString()+"\n");
        }

    } catch (Exception e) {
      // Capture and append Exceptions/Errors
      verificationErrors.append(e.toString());
    }
  }

  @AfterTest
  public void tearDown() throws Exception {
    // Close the browser
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }
}
